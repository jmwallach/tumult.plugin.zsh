#!/usr/bin/env bash
#
# Shows last 12 hours of Time Machine logs

set -o pipefail
if [[ -n "$DEBUG" ]]; then
  # shellcheck disable=SC2086
  if [[ "$(echo $DEBUG | tr '[:upper:]' '[:lower:]')" == "verbose" ]]; then
    set -x
  fi
fi

function echo-stderr() {
  printf '%s
' "$1" >&2  ## Send message to stderr. Exclude >&2 if you don't want it that way.
}

function debug() {
  if [[ -n "$DEBUG" ]]; then
      echo-stderr "$@"
  fi
}

function fail() {
  echo-stderr "$1"
  exit "${2-1}"  ## Return a code specified by $2 or 1 by default.
}

function has() {
  # Check if a command is in $PATH
  which "$@" > /dev/null 2>&1
}

function only-run-on() {
  # shellcheck disable=SC2086
  if [[ "$(uname -s | tr '[:upper:]' '[:lower:]')" != "$(echo $1 | tr '[:upper:]' '[:lower:]')" ]]; then
    fail "This script only runs on $1, this machine is running $(uname -s)"
  else
    debug "OS ($(uname -s)) is valid..."
  fi
}

function check-dependency() {
  if ! (builtin command -V "$1" >/dev/null 2>&1); then
    fail "missing dependency: can't find $1 in your PATH"
  fi
}

function check-dependencies() {
  debug "Checking dependencies..."
  # shellcheck disable=SC2041
  # Placeholders for whatever programs you really need
  for dep in "$@"
  do
    if ! has "$dep"; then
      fail "Can't find $dep in your $PATH"
    else
      debug "- Found $dep"
    fi
  done
}

only-run-on Darwin
check-dependencies log

filter='processImagePath contains "backupd" and subsystem beginswith "com.apple.TimeMachine"'

# show the last 12 hours
start="$(date -j -v-12H +'%Y-%m-%d %H:%M:%S')"

echo ""
echo "Time Machine History (from $start)"
echo ""

log show --style syslog --info --start "$start" --predicate "$filter"

echo ""
echo "Following Time Machine progress..."
echo ""

log stream --style syslog --info --predicate "$filter"
